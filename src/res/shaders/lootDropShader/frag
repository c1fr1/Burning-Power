#version 330 core

in vec2 worldPosition;

out vec4 color;

uniform float[10] playerProximity;
uniform vec2[10] lightPositions;
uniform float[10] lightStrengths;
uniform int numLights;

float getBrightnessScale(vec2 offset, int i) {
    return clamp(pow(2.718281828, -4 * dot(offset, offset) / (lightStrengths[i] * lightStrengths[i])) - 0.135335283237, 0, 1);
}

float getBrightnessAt(vec2 position) {
    float ret = 0;
    for (int i = 0; i < numLights; ++i) {
        ret += clamp(getBrightnessScale(position - lightPositions[i], i) * playerProximity[i], 0, 1 - ret);
    }
    return ret;
}

void main() {
    float grey = 1;//3 * getBrightnessAt(worldPosition);
    color = vec4(grey, grey, grey, 1);
}


