#version 330 core

in vec3 verts;
in vec2 texCoords;

out vec4 color;

uniform sampler2D texSampler;
uniform vec2 playerPosition;
uniform vec2[10] lightPositions;
uniform float[10] lightStrengths;
uniform int numLights;

float getBrightnessScale(vec2 offset, int i) {
    return pow(2.718281828, -4 * dot(offset, offset) / (lightStrengths[i] * lightStrengths[i])) - 0.135335283237;
}

void main() {
    color = texture(texSampler, vec2(mod(texCoords.x + 0.5, 1), -mod(texCoords.y + 0.5, 1)));
    float brightness = 0;
    for (int i = 0; i < numLights; ++i) {
        brightness += clamp(getBrightnessScale(verts.xz - lightPositions[i], i) * getBrightnessScale(playerPosition - lightPositions[i], i), 0, 1 - brightness);
    }
    color *= brightness;
}


